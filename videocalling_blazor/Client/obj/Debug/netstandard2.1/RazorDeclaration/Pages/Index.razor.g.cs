// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace videocalling_blazor.Client.Pages
{
    #line hidden
#nullable restore
#line 3 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\_Imports.razor"
using videocalling_blazor.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\_Imports.razor"
using videocalling_blazor.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using videocalling_blazor.Client.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using Microsoft.Extensions.DependencyInjection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using videocalling_blazor.Client.Interop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using videocalling_blazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using System.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 152 "E:\OfficeData\angular_workspace\soowgood\videocalling_blazor\Client\Pages\Index.razor"
       

    [Parameter]
    public string? _room { get; set; }
    [Inject]
    protected IJSRuntime? JavaScript { get; set; }
    [Inject]
    protected NavigationManager NavigationManager { get; set; } = null!;
    [Inject]
    protected HttpClient Http { get; set; } = null!;

    List<RoomDetails> _rooms = new List<RoomDetails>();

    string? _testroomName;
    string? _roomName;
    string? _activeCamera;
    string? _activeRoom;
    string? _bookingid;
    string? _serviceforname;
    string? _usertype;
    string? _username;

    HubConnection? _hubConnection;
    bool? _isloader = false;

    string? _isCammeraOn = "";
    string? _isAudioOn = "";



    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        //if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("_room", out var _rName))
        //{
        //    _testroomName = _rName;
        //}

        var data = HttpUtility.ParseQueryString(new Uri(NavigationManager.Uri).Query);
        if (data["_data"] == null)
        {
            NavigationManager.NavigateTo("errorpage?code=404");
        }
        else
        {
            _isloader = true;
            _bookingid = data["_data"];
            _usertype = data["_usertype"];
            await GetAppointDetailsForCall(_bookingid, _usertype);
        }

    }


    async ValueTask OnUnMuteandMuteVideoRoom(bool cammerastatus)
    {
        await JavaScript.UnMuteandMuteVideoRoomAsync(_testroomName, cammerastatus);
        if (cammerastatus == true)
        {
            _isCammeraOn = "inactive";
        }
        else
        {
            _isCammeraOn = "";
        }
    }


    async ValueTask OnUnMuteandMuteAudioRoom(bool cammerastatus)
    {
        await JavaScript.UnMuteandMuteAudioRoomAsync(_testroomName, cammerastatus);
        if (cammerastatus == true)
        {
            _isAudioOn = "inactive";
        }
        else
        {
            _isAudioOn = "";
        }
    }





    async ValueTask OnLeaveRoom()
    {
        await JavaScript.LeaveRoomAsync();
        _activeRoom = null;
        if (!string.IsNullOrWhiteSpace(_activeCamera))
            //await JavaScript.StartVideoAsync(_activeCamera, "#camera");
            NavigationManager.NavigateTo("/leavemeeting?_data=" + _bookingid + "&_usertype=" + _usertype, forceLoad: true);


    }

    async Task OnCameraChanged(string activeCamera) =>
        await InvokeAsync(() => _activeCamera = activeCamera);

    async Task OnRoomAdded(string roomName) =>
        await InvokeAsync(async () =>
        {
            _rooms = await Http.GetFromJsonAsync<List<RoomDetails>>("api/twilio/rooms");
            StateHasChanged();
        });

    protected async ValueTask TryAddRoom(object args)
    {
        _isloader = true;
        if (_testroomName is null || _testroomName is { Length: 0 })
        {
            _isloader = false;
            return;
        }
        else
        {

            _roomName = _testroomName;
        }

        var takeAction = args switch
        {
            KeyboardEventArgs keyboard when keyboard.Key == "Enter" => true,
            MouseEventArgs _ => true,
            _ => false
        };

        if (takeAction)
        {
            var addedOrJoined = await TryJoinRoom(_roomName, _serviceforname, _username);
            if (addedOrJoined)
            {
                await JavaScript.JoinRoomSuccessAsync();
                await OnRoomAdded(_roomName);
                //await sendnotificationatcallstarted(_bookingid, _usertype);
                _isloader = false;
                _roomName = null;
            }
            else
            {
                _isloader = false;
            }
        }
    }





    protected async ValueTask<bool> sendnotificationatcallstarted(string? bookingid, string? usertype)
    {
        if (bookingid is null || bookingid is { Length: 0 })
        {
            return false;
        }
        var postBody = new BookData { Id = bookingid, usertype= usertype };
        var bookingdata = await Http.PostAsJsonAsync("api/appointment/sendnotificationatcallstarted", postBody);
        string apiResponse = await bookingdata.Content.ReadAsStringAsync();
        List<BookData> response = JsonConvert.DeserializeObject<List<BookData>>(apiResponse);

        return true;


    }


    protected async ValueTask<bool> GetAppointDetailsForCall(string? bookingid, string? usertype)
    {
        if (bookingid is null || bookingid is { Length: 0 })
        {
            return false;
        }
        var postBody = new BookData { Id = bookingid };
        var bookingdata = await Http.PostAsJsonAsync("api/appointment/GetAppointmentDataForBooking", postBody);
        string apiResponse = await bookingdata.Content.ReadAsStringAsync();
        List<BookData> response = JsonConvert.DeserializeObject<List<BookData>>(apiResponse);
        if (response is null)
        {
            _isloader = false;
            NavigationManager.NavigateTo("errorpage?code=404");
        }
        if (response.Count > 0)
        {
            foreach (BookData data in response)
            {
                if (data.callstatus == "Start Soon")
                {
                    _testroomName = "Meeting For " + data.AppointmentDate + " - [ " + data.scheduleTime + " ] ";
                    if (usertype == "provider")
                    {
                        string newavtar = "";
                        string[] sname = data.ServiceProvider.Split(' ');

                        if (sname.Length == 1)
                        {
                            newavtar = sname[0].Substring(0, 2);
                        }
                        else if (sname.Length == 2)
                        {
                            newavtar = sname[0].Substring(0, 1) + sname[1].Substring(0, 1);
                        }
                        else if (sname.Length == 3)
                        {
                            newavtar = sname[0].Substring(0, 1) + sname[2].Substring(0, 1);
                        }

                        _username = data.ServiceProvider;
                        _serviceforname = newavtar.ToUpper();
                    }
                    else
                    {
                        string newavtar = "";
                        string[] sname = data.ServiceReceiver.Split(' ');

                        if (sname.Length == 1)
                        {
                            newavtar = sname[0].Substring(0, 2);
                        }
                        else if (sname.Length == 2)
                        {
                            newavtar = sname[0].Substring(0, 1) + sname[1].Substring(0, 1);
                        }
                        else if (sname.Length == 3)
                        {
                            newavtar = sname[0].Substring(0, 1) + sname[2].Substring(0, 1);
                        }
                        _username = data.ServiceProvider;
                        _serviceforname = newavtar.ToUpper();
                    }
                }
                else if (data.callstatus == "TimeOut")
                {
                    NavigationManager.NavigateTo("errorpage?code=505");
                }
                else if (data.callstatus == "Completed")
                {
                    NavigationManager.NavigateTo("errorpage?code=507");
                }
                else if (data.callstatus == "Yet to Start")
                {
                    NavigationManager.NavigateTo("errorpage?code=506");
                }
            }
            _isloader = false;
        }
        else
        {
            _isloader = false;
            NavigationManager.NavigateTo("errorpage?code=404");
        }

        return true;


    }




    protected async ValueTask<bool> TryJoinRoom(string? roomName, string? _serviceforname, string? _username)
    {
        if (roomName is null || roomName is { Length: 0 })
        {
            return false;
        }

        var jwt = await Http.GetFromJsonAsync<TwilioJwt>("api/twilio/token");
        if (jwt?.Token is null)
        {
            return false;
        }

        var joined = await JavaScript.CreateOrJoinRoomAsync(roomName, jwt.Token, _serviceforname, _username);
        if (joined)
        {
            _activeRoom = roomName;


        }

        return joined;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
    }
}
#pragma warning restore 1591
